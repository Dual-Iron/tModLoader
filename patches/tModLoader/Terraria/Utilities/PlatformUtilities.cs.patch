--- src/Terraria/Terraria/Utilities/PlatformUtilities.cs
+++ src/tModLoader/Terraria/Utilities/PlatformUtilities.cs
@@ -36,50 +_,26 @@
 			private int refcount;
 		}
 #endif
-#if WINDOWS
-		public const bool IsXNA = true;
-		public const bool IsFNA = false;
-		public const bool IsWindows = true;
-#else
 		public const bool IsXNA = false;
 		public const bool IsFNA = true;
-
-		public const bool IsWindows = false;
-#endif
-
-#if MAC
+#if WINDOWS
+		public const bool IsWindows = true;
+		public const bool IsOSX = false;
+		public const bool IsLinux = false;
+#elif MAC
 		public const bool IsOSX = true;
+		public const bool IsWindows = false;
+		public const bool IsLinux = false;
 #else
-		public const bool IsOSX = false;
-#endif
-#if LINUX
 		public const bool IsLinux = true;
-#else
-		public const bool IsLinux = false;
+		public const bool IsWindows = false;
+		public const bool IsOSX = false;
 #endif
 
 #if !WINDOWS
 		public unsafe static void SavePng(Stream stream, int width, int height, int imgWidth, int imgHeight, byte[] data) {
 #if CLIENT
-			IntPtr intPtr = SDL.SDL_CreateRGBSurface(0u, imgWidth, imgHeight, 32, 255u, 65280u, 16711680u, 4278190080u);
-			SDL.SDL_LockSurface(intPtr);
-			PlatformUtilities.SDL_Surface* ptr = (PlatformUtilities.SDL_Surface*)((void*)intPtr);
-			Marshal.Copy(data, 0, ptr->pixels, width * height * 4);
-			SDL.SDL_UnlockSurface(intPtr);
-			data = null;
-			if (width != imgWidth || height != imgHeight) {
-				IntPtr intPtr2 = SDL.SDL_CreateRGBSurface(0u, width, height, 32, 255u, 65280u, 16711680u, 4278190080u);
-				SDL.SDL_BlitScaled(intPtr, IntPtr.Zero, intPtr2, IntPtr.Zero);
-				SDL.SDL_FreeSurface(intPtr);
-				intPtr = intPtr2;
-			}
-
-			byte[] array = new byte[width * height * 4 + 41 + 57 + 256];
-			IntPtr intPtr3 = SDL.SDL_RWFromMem(array, array.Length);
-			SDL_image.IMG_SavePNG_RW(intPtr, intPtr3, 1);
-			SDL.SDL_FreeSurface(intPtr);
-			int count = ((int)array[33] << 24 | (int)array[34] << 16 | (int)array[35] << 8 | (int)array[36]) + 41 + 57;
-			stream.Write(array, 0, count);
+			throw new NotImplementedException("Image saving needs redone for FNA");
 #endif
 		}
 #endif
